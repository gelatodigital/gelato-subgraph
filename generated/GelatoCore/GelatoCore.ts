// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LogCanExecFailed extends ethereum.Event {
  get params(): LogCanExecFailed__Params {
    return new LogCanExecFailed__Params(this);
  }
}

export class LogCanExecFailed__Params {
  _event: LogCanExecFailed;

  constructor(event: LogCanExecFailed) {
    this._event = event;
  }

  get executor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get taskReceiptId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get reason(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class LogExecReverted extends ethereum.Event {
  get params(): LogExecReverted__Params {
    return new LogExecReverted__Params(this);
  }
}

export class LogExecReverted__Params {
  _event: LogExecReverted;

  constructor(event: LogExecReverted) {
    this._event = event;
  }

  get executor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get taskReceiptId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get executorRefund(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get reason(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class LogExecSuccess extends ethereum.Event {
  get params(): LogExecSuccess__Params {
    return new LogExecSuccess__Params(this);
  }
}

export class LogExecSuccess__Params {
  _event: LogExecSuccess;

  constructor(event: LogExecSuccess) {
    this._event = event;
  }

  get executor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get taskReceiptId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get executorSuccessFee(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get sysAdminSuccessFee(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class LogExecutorAssignedExecutor extends ethereum.Event {
  get params(): LogExecutorAssignedExecutor__Params {
    return new LogExecutorAssignedExecutor__Params(this);
  }
}

export class LogExecutorAssignedExecutor__Params {
  _event: LogExecutorAssignedExecutor;

  constructor(event: LogExecutorAssignedExecutor) {
    this._event = event;
  }

  get provider(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get oldExecutor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newExecutor(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class LogExecutorBalanceWithdrawn extends ethereum.Event {
  get params(): LogExecutorBalanceWithdrawn__Params {
    return new LogExecutorBalanceWithdrawn__Params(this);
  }
}

export class LogExecutorBalanceWithdrawn__Params {
  _event: LogExecutorBalanceWithdrawn;

  constructor(event: LogExecutorBalanceWithdrawn) {
    this._event = event;
  }

  get executor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get withdrawAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class LogExecutorStaked extends ethereum.Event {
  get params(): LogExecutorStaked__Params {
    return new LogExecutorStaked__Params(this);
  }
}

export class LogExecutorStaked__Params {
  _event: LogExecutorStaked;

  constructor(event: LogExecutorStaked) {
    this._event = event;
  }

  get executor(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get oldStake(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newStake(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class LogExecutorSuccessShareSet extends ethereum.Event {
  get params(): LogExecutorSuccessShareSet__Params {
    return new LogExecutorSuccessShareSet__Params(this);
  }
}

export class LogExecutorSuccessShareSet__Params {
  _event: LogExecutorSuccessShareSet;

  constructor(event: LogExecutorSuccessShareSet) {
    this._event = event;
  }

  get oldShare(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newShare(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get total(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class LogExecutorUnstaked extends ethereum.Event {
  get params(): LogExecutorUnstaked__Params {
    return new LogExecutorUnstaked__Params(this);
  }
}

export class LogExecutorUnstaked__Params {
  _event: LogExecutorUnstaked;

  constructor(event: LogExecutorUnstaked) {
    this._event = event;
  }

  get executor(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class LogFundsProvided extends ethereum.Event {
  get params(): LogFundsProvided__Params {
    return new LogFundsProvided__Params(this);
  }
}

export class LogFundsProvided__Params {
  _event: LogFundsProvided;

  constructor(event: LogFundsProvided) {
    this._event = event;
  }

  get provider(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newProviderFunds(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class LogFundsUnprovided extends ethereum.Event {
  get params(): LogFundsUnprovided__Params {
    return new LogFundsUnprovided__Params(this);
  }
}

export class LogFundsUnprovided__Params {
  _event: LogFundsUnprovided;

  constructor(event: LogFundsUnprovided) {
    this._event = event;
  }

  get provider(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get realWithdrawAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newProviderFunds(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class LogGelatoGasPriceOracleSet extends ethereum.Event {
  get params(): LogGelatoGasPriceOracleSet__Params {
    return new LogGelatoGasPriceOracleSet__Params(this);
  }
}

export class LogGelatoGasPriceOracleSet__Params {
  _event: LogGelatoGasPriceOracleSet;

  constructor(event: LogGelatoGasPriceOracleSet) {
    this._event = event;
  }

  get oldOracle(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOracle(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LogGelatoMaxGasSet extends ethereum.Event {
  get params(): LogGelatoMaxGasSet__Params {
    return new LogGelatoMaxGasSet__Params(this);
  }
}

export class LogGelatoMaxGasSet__Params {
  _event: LogGelatoMaxGasSet;

  constructor(event: LogGelatoMaxGasSet) {
    this._event = event;
  }

  get oldMaxGas(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newMaxGas(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class LogInternalGasRequirementSet extends ethereum.Event {
  get params(): LogInternalGasRequirementSet__Params {
    return new LogInternalGasRequirementSet__Params(this);
  }
}

export class LogInternalGasRequirementSet__Params {
  _event: LogInternalGasRequirementSet;

  constructor(event: LogInternalGasRequirementSet) {
    this._event = event;
  }

  get oldRequirment(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newRequirment(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class LogMinExecutorStakeSet extends ethereum.Event {
  get params(): LogMinExecutorStakeSet__Params {
    return new LogMinExecutorStakeSet__Params(this);
  }
}

export class LogMinExecutorStakeSet__Params {
  _event: LogMinExecutorStakeSet;

  constructor(event: LogMinExecutorStakeSet) {
    this._event = event;
  }

  get oldMin(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newMin(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class LogOracleRequestDataSet extends ethereum.Event {
  get params(): LogOracleRequestDataSet__Params {
    return new LogOracleRequestDataSet__Params(this);
  }
}

export class LogOracleRequestDataSet__Params {
  _event: LogOracleRequestDataSet;

  constructor(event: LogOracleRequestDataSet) {
    this._event = event;
  }

  get oldData(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get newData(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class LogProviderAssignedExecutor extends ethereum.Event {
  get params(): LogProviderAssignedExecutor__Params {
    return new LogProviderAssignedExecutor__Params(this);
  }
}

export class LogProviderAssignedExecutor__Params {
  _event: LogProviderAssignedExecutor;

  constructor(event: LogProviderAssignedExecutor) {
    this._event = event;
  }

  get provider(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get oldExecutor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newExecutor(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class LogProviderModuleAdded extends ethereum.Event {
  get params(): LogProviderModuleAdded__Params {
    return new LogProviderModuleAdded__Params(this);
  }
}

export class LogProviderModuleAdded__Params {
  _event: LogProviderModuleAdded;

  constructor(event: LogProviderModuleAdded) {
    this._event = event;
  }

  get provider(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get module(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LogProviderModuleRemoved extends ethereum.Event {
  get params(): LogProviderModuleRemoved__Params {
    return new LogProviderModuleRemoved__Params(this);
  }
}

export class LogProviderModuleRemoved__Params {
  _event: LogProviderModuleRemoved;

  constructor(event: LogProviderModuleRemoved) {
    this._event = event;
  }

  get provider(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get module(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LogSysAdminFundsWithdrawn extends ethereum.Event {
  get params(): LogSysAdminFundsWithdrawn__Params {
    return new LogSysAdminFundsWithdrawn__Params(this);
  }
}

export class LogSysAdminFundsWithdrawn__Params {
  _event: LogSysAdminFundsWithdrawn;

  constructor(event: LogSysAdminFundsWithdrawn) {
    this._event = event;
  }

  get oldBalance(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newBalance(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class LogSysAdminSuccessShareSet extends ethereum.Event {
  get params(): LogSysAdminSuccessShareSet__Params {
    return new LogSysAdminSuccessShareSet__Params(this);
  }
}

export class LogSysAdminSuccessShareSet__Params {
  _event: LogSysAdminSuccessShareSet;

  constructor(event: LogSysAdminSuccessShareSet) {
    this._event = event;
  }

  get oldShare(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newShare(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get total(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class LogTaskCancelled extends ethereum.Event {
  get params(): LogTaskCancelled__Params {
    return new LogTaskCancelled__Params(this);
  }
}

export class LogTaskCancelled__Params {
  _event: LogTaskCancelled;

  constructor(event: LogTaskCancelled) {
    this._event = event;
  }

  get taskReceiptId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get cancellor(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LogTaskSpecGasPriceCeilSet extends ethereum.Event {
  get params(): LogTaskSpecGasPriceCeilSet__Params {
    return new LogTaskSpecGasPriceCeilSet__Params(this);
  }
}

export class LogTaskSpecGasPriceCeilSet__Params {
  _event: LogTaskSpecGasPriceCeilSet;

  constructor(event: LogTaskSpecGasPriceCeilSet) {
    this._event = event;
  }

  get provider(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get taskSpecHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get oldTaskSpecGasPriceCeil(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get newTaskSpecGasPriceCeil(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class LogTaskSpecProvided extends ethereum.Event {
  get params(): LogTaskSpecProvided__Params {
    return new LogTaskSpecProvided__Params(this);
  }
}

export class LogTaskSpecProvided__Params {
  _event: LogTaskSpecProvided;

  constructor(event: LogTaskSpecProvided) {
    this._event = event;
  }

  get provider(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get taskSpecHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class LogTaskSpecUnprovided extends ethereum.Event {
  get params(): LogTaskSpecUnprovided__Params {
    return new LogTaskSpecUnprovided__Params(this);
  }
}

export class LogTaskSpecUnprovided__Params {
  _event: LogTaskSpecUnprovided;

  constructor(event: LogTaskSpecUnprovided) {
    this._event = event;
  }

  get provider(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get taskSpecHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class LogTaskSubmitted extends ethereum.Event {
  get params(): LogTaskSubmitted__Params {
    return new LogTaskSubmitted__Params(this);
  }
}

export class LogTaskSubmitted__Params {
  _event: LogTaskSubmitted;

  constructor(event: LogTaskSubmitted) {
    this._event = event;
  }

  get taskReceiptId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get taskReceiptHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get taskReceipt(): LogTaskSubmittedTaskReceiptStruct {
    return this._event.parameters[2].value.toTuple() as LogTaskSubmittedTaskReceiptStruct;
  }
}

export class LogTaskSubmittedTaskReceiptStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get userProxy(): Address {
    return this[1].toAddress();
  }

  get provider(): LogTaskSubmittedTaskReceiptProviderStruct {
    return this[2].toTuple() as LogTaskSubmittedTaskReceiptProviderStruct;
  }

  get index(): BigInt {
    return this[3].toBigInt();
  }

  get tasks(): Array<LogTaskSubmittedTaskReceiptTasksStruct> {
    return this[4].toTupleArray<LogTaskSubmittedTaskReceiptTasksStruct>();
  }

  get expiryDate(): BigInt {
    return this[5].toBigInt();
  }

  get cycleId(): BigInt {
    return this[6].toBigInt();
  }

  get submissionsLeft(): BigInt {
    return this[7].toBigInt();
  }
}

export class LogTaskSubmittedTaskReceiptProviderStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get module(): Address {
    return this[1].toAddress();
  }
}

export class LogTaskSubmittedTaskReceiptTasksStruct extends ethereum.Tuple {
  get conditions(): Array<LogTaskSubmittedTaskReceiptTasksConditionsStruct> {
    return this[0].toTupleArray<
      LogTaskSubmittedTaskReceiptTasksConditionsStruct
    >();
  }

  get actions(): Array<LogTaskSubmittedTaskReceiptTasksActionsStruct> {
    return this[1].toTupleArray<
      LogTaskSubmittedTaskReceiptTasksActionsStruct
    >();
  }

  get selfProviderGasLimit(): BigInt {
    return this[2].toBigInt();
  }

  get selfProviderGasPriceCeil(): BigInt {
    return this[3].toBigInt();
  }
}

export class LogTaskSubmittedTaskReceiptTasksConditionsStruct extends ethereum.Tuple {
  get inst(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class LogTaskSubmittedTaskReceiptTasksActionsStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get operation(): i32 {
    return this[2].toI32();
  }

  get dataFlow(): i32 {
    return this[3].toI32();
  }

  get value(): BigInt {
    return this[4].toBigInt();
  }

  get termsOkCheck(): boolean {
    return this[5].toBoolean();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class GelatoCore__canExecInput_TRStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get userProxy(): Address {
    return this[1].toAddress();
  }

  get provider(): GelatoCore__canExecInput_TRProviderStruct {
    return this[2].toTuple() as GelatoCore__canExecInput_TRProviderStruct;
  }

  get index(): BigInt {
    return this[3].toBigInt();
  }

  get tasks(): Array<GelatoCore__canExecInput_TRTasksStruct> {
    return this[4].toTupleArray<GelatoCore__canExecInput_TRTasksStruct>();
  }

  get expiryDate(): BigInt {
    return this[5].toBigInt();
  }

  get cycleId(): BigInt {
    return this[6].toBigInt();
  }

  get submissionsLeft(): BigInt {
    return this[7].toBigInt();
  }
}

export class GelatoCore__canExecInput_TRProviderStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get module(): Address {
    return this[1].toAddress();
  }
}

export class GelatoCore__canExecInput_TRTasksStruct extends ethereum.Tuple {
  get conditions(): Array<GelatoCore__canExecInput_TRTasksConditionsStruct> {
    return this[0].toTupleArray<
      GelatoCore__canExecInput_TRTasksConditionsStruct
    >();
  }

  get actions(): Array<GelatoCore__canExecInput_TRTasksActionsStruct> {
    return this[1].toTupleArray<
      GelatoCore__canExecInput_TRTasksActionsStruct
    >();
  }

  get selfProviderGasLimit(): BigInt {
    return this[2].toBigInt();
  }

  get selfProviderGasPriceCeil(): BigInt {
    return this[3].toBigInt();
  }
}

export class GelatoCore__canExecInput_TRTasksConditionsStruct extends ethereum.Tuple {
  get inst(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class GelatoCore__canExecInput_TRTasksActionsStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get operation(): i32 {
    return this[2].toI32();
  }

  get dataFlow(): i32 {
    return this[3].toI32();
  }

  get value(): BigInt {
    return this[4].toBigInt();
  }

  get termsOkCheck(): boolean {
    return this[5].toBoolean();
  }
}

export class GelatoCore__canSubmitTaskInput_providerStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get module(): Address {
    return this[1].toAddress();
  }
}

export class GelatoCore__canSubmitTaskInput_taskStruct extends ethereum.Tuple {
  get conditions(): Array<GelatoCore__canSubmitTaskInput_taskConditionsStruct> {
    return this[0].toTupleArray<
      GelatoCore__canSubmitTaskInput_taskConditionsStruct
    >();
  }

  get actions(): Array<GelatoCore__canSubmitTaskInput_taskActionsStruct> {
    return this[1].toTupleArray<
      GelatoCore__canSubmitTaskInput_taskActionsStruct
    >();
  }

  get selfProviderGasLimit(): BigInt {
    return this[2].toBigInt();
  }

  get selfProviderGasPriceCeil(): BigInt {
    return this[3].toBigInt();
  }
}

export class GelatoCore__canSubmitTaskInput_taskConditionsStruct extends ethereum.Tuple {
  get inst(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class GelatoCore__canSubmitTaskInput_taskActionsStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get operation(): i32 {
    return this[2].toI32();
  }

  get dataFlow(): i32 {
    return this[3].toI32();
  }

  get value(): BigInt {
    return this[4].toBigInt();
  }

  get termsOkCheck(): boolean {
    return this[5].toBoolean();
  }
}

export class GelatoCore__executionWrapperResult {
  value0: i32;
  value1: string;

  constructor(value0: i32, value1: string) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromString(this.value1));
    return map;
  }
}

export class GelatoCore__executionWrapperInputTaskReceiptStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get userProxy(): Address {
    return this[1].toAddress();
  }

  get provider(): GelatoCore__executionWrapperInputTaskReceiptProviderStruct {
    return this[2].toTuple() as GelatoCore__executionWrapperInputTaskReceiptProviderStruct;
  }

  get index(): BigInt {
    return this[3].toBigInt();
  }

  get tasks(): Array<GelatoCore__executionWrapperInputTaskReceiptTasksStruct> {
    return this[4].toTupleArray<
      GelatoCore__executionWrapperInputTaskReceiptTasksStruct
    >();
  }

  get expiryDate(): BigInt {
    return this[5].toBigInt();
  }

  get cycleId(): BigInt {
    return this[6].toBigInt();
  }

  get submissionsLeft(): BigInt {
    return this[7].toBigInt();
  }
}

export class GelatoCore__executionWrapperInputTaskReceiptProviderStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get module(): Address {
    return this[1].toAddress();
  }
}

export class GelatoCore__executionWrapperInputTaskReceiptTasksStruct extends ethereum.Tuple {
  get conditions(): Array<
    GelatoCore__executionWrapperInputTaskReceiptTasksConditionsStruct
  > {
    return this[0].toTupleArray<
      GelatoCore__executionWrapperInputTaskReceiptTasksConditionsStruct
    >();
  }

  get actions(): Array<
    GelatoCore__executionWrapperInputTaskReceiptTasksActionsStruct
  > {
    return this[1].toTupleArray<
      GelatoCore__executionWrapperInputTaskReceiptTasksActionsStruct
    >();
  }

  get selfProviderGasLimit(): BigInt {
    return this[2].toBigInt();
  }

  get selfProviderGasPriceCeil(): BigInt {
    return this[3].toBigInt();
  }
}

export class GelatoCore__executionWrapperInputTaskReceiptTasksConditionsStruct extends ethereum.Tuple {
  get inst(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class GelatoCore__executionWrapperInputTaskReceiptTasksActionsStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get operation(): i32 {
    return this[2].toI32();
  }

  get dataFlow(): i32 {
    return this[3].toI32();
  }

  get value(): BigInt {
    return this[4].toBigInt();
  }

  get termsOkCheck(): boolean {
    return this[5].toBoolean();
  }
}

export class GelatoCore__hashTaskReceiptInput_TRStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get userProxy(): Address {
    return this[1].toAddress();
  }

  get provider(): GelatoCore__hashTaskReceiptInput_TRProviderStruct {
    return this[2].toTuple() as GelatoCore__hashTaskReceiptInput_TRProviderStruct;
  }

  get index(): BigInt {
    return this[3].toBigInt();
  }

  get tasks(): Array<GelatoCore__hashTaskReceiptInput_TRTasksStruct> {
    return this[4].toTupleArray<
      GelatoCore__hashTaskReceiptInput_TRTasksStruct
    >();
  }

  get expiryDate(): BigInt {
    return this[5].toBigInt();
  }

  get cycleId(): BigInt {
    return this[6].toBigInt();
  }

  get submissionsLeft(): BigInt {
    return this[7].toBigInt();
  }
}

export class GelatoCore__hashTaskReceiptInput_TRProviderStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get module(): Address {
    return this[1].toAddress();
  }
}

export class GelatoCore__hashTaskReceiptInput_TRTasksStruct extends ethereum.Tuple {
  get conditions(): Array<
    GelatoCore__hashTaskReceiptInput_TRTasksConditionsStruct
  > {
    return this[0].toTupleArray<
      GelatoCore__hashTaskReceiptInput_TRTasksConditionsStruct
    >();
  }

  get actions(): Array<GelatoCore__hashTaskReceiptInput_TRTasksActionsStruct> {
    return this[1].toTupleArray<
      GelatoCore__hashTaskReceiptInput_TRTasksActionsStruct
    >();
  }

  get selfProviderGasLimit(): BigInt {
    return this[2].toBigInt();
  }

  get selfProviderGasPriceCeil(): BigInt {
    return this[3].toBigInt();
  }
}

export class GelatoCore__hashTaskReceiptInput_TRTasksConditionsStruct extends ethereum.Tuple {
  get inst(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class GelatoCore__hashTaskReceiptInput_TRTasksActionsStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get operation(): i32 {
    return this[2].toI32();
  }

  get dataFlow(): i32 {
    return this[3].toI32();
  }

  get value(): BigInt {
    return this[4].toBigInt();
  }

  get termsOkCheck(): boolean {
    return this[5].toBoolean();
  }
}

export class GelatoCore__hashTaskSpecInput_taskSpecStruct extends ethereum.Tuple {
  get conditions(): Array<Address> {
    return this[0].toAddressArray();
  }

  get actions(): Array<GelatoCore__hashTaskSpecInput_taskSpecActionsStruct> {
    return this[1].toTupleArray<
      GelatoCore__hashTaskSpecInput_taskSpecActionsStruct
    >();
  }

  get gasPriceCeil(): BigInt {
    return this[2].toBigInt();
  }
}

export class GelatoCore__hashTaskSpecInput_taskSpecActionsStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get operation(): i32 {
    return this[2].toI32();
  }

  get dataFlow(): i32 {
    return this[3].toI32();
  }

  get value(): BigInt {
    return this[4].toBigInt();
  }

  get termsOkCheck(): boolean {
    return this[5].toBoolean();
  }
}

export class GelatoCore__isTaskProvidedInput_providerStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get module(): Address {
    return this[1].toAddress();
  }
}

export class GelatoCore__isTaskProvidedInput_taskStruct extends ethereum.Tuple {
  get conditions(): Array<
    GelatoCore__isTaskProvidedInput_taskConditionsStruct
  > {
    return this[0].toTupleArray<
      GelatoCore__isTaskProvidedInput_taskConditionsStruct
    >();
  }

  get actions(): Array<GelatoCore__isTaskProvidedInput_taskActionsStruct> {
    return this[1].toTupleArray<
      GelatoCore__isTaskProvidedInput_taskActionsStruct
    >();
  }

  get selfProviderGasLimit(): BigInt {
    return this[2].toBigInt();
  }

  get selfProviderGasPriceCeil(): BigInt {
    return this[3].toBigInt();
  }
}

export class GelatoCore__isTaskProvidedInput_taskConditionsStruct extends ethereum.Tuple {
  get inst(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class GelatoCore__isTaskProvidedInput_taskActionsStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get operation(): i32 {
    return this[2].toI32();
  }

  get dataFlow(): i32 {
    return this[3].toI32();
  }

  get value(): BigInt {
    return this[4].toBigInt();
  }

  get termsOkCheck(): boolean {
    return this[5].toBoolean();
  }
}

export class GelatoCore__isTaskSpecProvidedInput_taskSpecStruct extends ethereum.Tuple {
  get conditions(): Array<Address> {
    return this[0].toAddressArray();
  }

  get actions(): Array<
    GelatoCore__isTaskSpecProvidedInput_taskSpecActionsStruct
  > {
    return this[1].toTupleArray<
      GelatoCore__isTaskSpecProvidedInput_taskSpecActionsStruct
    >();
  }

  get gasPriceCeil(): BigInt {
    return this[2].toBigInt();
  }
}

export class GelatoCore__isTaskSpecProvidedInput_taskSpecActionsStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get operation(): i32 {
    return this[2].toI32();
  }

  get dataFlow(): i32 {
    return this[3].toI32();
  }

  get value(): BigInt {
    return this[4].toBigInt();
  }

  get termsOkCheck(): boolean {
    return this[5].toBoolean();
  }
}

export class GelatoCore__providerCanExecInput_providerStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get module(): Address {
    return this[1].toAddress();
  }
}

export class GelatoCore__providerCanExecInput_taskStruct extends ethereum.Tuple {
  get conditions(): Array<
    GelatoCore__providerCanExecInput_taskConditionsStruct
  > {
    return this[0].toTupleArray<
      GelatoCore__providerCanExecInput_taskConditionsStruct
    >();
  }

  get actions(): Array<GelatoCore__providerCanExecInput_taskActionsStruct> {
    return this[1].toTupleArray<
      GelatoCore__providerCanExecInput_taskActionsStruct
    >();
  }

  get selfProviderGasLimit(): BigInt {
    return this[2].toBigInt();
  }

  get selfProviderGasPriceCeil(): BigInt {
    return this[3].toBigInt();
  }
}

export class GelatoCore__providerCanExecInput_taskConditionsStruct extends ethereum.Tuple {
  get inst(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class GelatoCore__providerCanExecInput_taskActionsStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get operation(): i32 {
    return this[2].toI32();
  }

  get dataFlow(): i32 {
    return this[3].toI32();
  }

  get value(): BigInt {
    return this[4].toBigInt();
  }

  get termsOkCheck(): boolean {
    return this[5].toBoolean();
  }
}

export class GelatoCore__providerModuleChecksInput_providerStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get module(): Address {
    return this[1].toAddress();
  }
}

export class GelatoCore__providerModuleChecksInput_taskStruct extends ethereum.Tuple {
  get conditions(): Array<
    GelatoCore__providerModuleChecksInput_taskConditionsStruct
  > {
    return this[0].toTupleArray<
      GelatoCore__providerModuleChecksInput_taskConditionsStruct
    >();
  }

  get actions(): Array<
    GelatoCore__providerModuleChecksInput_taskActionsStruct
  > {
    return this[1].toTupleArray<
      GelatoCore__providerModuleChecksInput_taskActionsStruct
    >();
  }

  get selfProviderGasLimit(): BigInt {
    return this[2].toBigInt();
  }

  get selfProviderGasPriceCeil(): BigInt {
    return this[3].toBigInt();
  }
}

export class GelatoCore__providerModuleChecksInput_taskConditionsStruct extends ethereum.Tuple {
  get inst(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class GelatoCore__providerModuleChecksInput_taskActionsStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get operation(): i32 {
    return this[2].toI32();
  }

  get dataFlow(): i32 {
    return this[3].toI32();
  }

  get value(): BigInt {
    return this[4].toBigInt();
  }

  get termsOkCheck(): boolean {
    return this[5].toBoolean();
  }
}

export class GelatoCore extends ethereum.SmartContract {
  static bind(address: Address): GelatoCore {
    return new GelatoCore("GelatoCore", address);
  }

  EXEC_TX_OVERHEAD(): BigInt {
    let result = super.call(
      "EXEC_TX_OVERHEAD",
      "EXEC_TX_OVERHEAD():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_EXEC_TX_OVERHEAD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "EXEC_TX_OVERHEAD",
      "EXEC_TX_OVERHEAD():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  NO_CEIL(): BigInt {
    let result = super.call("NO_CEIL", "NO_CEIL():(uint256)", []);

    return result[0].toBigInt();
  }

  try_NO_CEIL(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("NO_CEIL", "NO_CEIL():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  canExec(
    _TR: GelatoCore__canExecInput_TRStruct,
    _gasLimit: BigInt,
    _gelatoGasPrice: BigInt
  ): string {
    let result = super.call(
      "canExec",
      "canExec((uint256,address,(address,address),uint256,((address,bytes)[],(address,bytes,uint8,uint8,uint256,bool)[],uint256,uint256)[],uint256,uint256,uint256),uint256,uint256):(string)",
      [
        ethereum.Value.fromTuple(_TR),
        ethereum.Value.fromUnsignedBigInt(_gasLimit),
        ethereum.Value.fromUnsignedBigInt(_gelatoGasPrice)
      ]
    );

    return result[0].toString();
  }

  try_canExec(
    _TR: GelatoCore__canExecInput_TRStruct,
    _gasLimit: BigInt,
    _gelatoGasPrice: BigInt
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "canExec",
      "canExec((uint256,address,(address,address),uint256,((address,bytes)[],(address,bytes,uint8,uint8,uint256,bool)[],uint256,uint256)[],uint256,uint256,uint256),uint256,uint256):(string)",
      [
        ethereum.Value.fromTuple(_TR),
        ethereum.Value.fromUnsignedBigInt(_gasLimit),
        ethereum.Value.fromUnsignedBigInt(_gelatoGasPrice)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  canSubmitTask(
    _userProxy: Address,
    _provider: GelatoCore__canSubmitTaskInput_providerStruct,
    _task: GelatoCore__canSubmitTaskInput_taskStruct,
    _expiryDate: BigInt
  ): string {
    let result = super.call(
      "canSubmitTask",
      "canSubmitTask(address,(address,address),((address,bytes)[],(address,bytes,uint8,uint8,uint256,bool)[],uint256,uint256),uint256):(string)",
      [
        ethereum.Value.fromAddress(_userProxy),
        ethereum.Value.fromTuple(_provider),
        ethereum.Value.fromTuple(_task),
        ethereum.Value.fromUnsignedBigInt(_expiryDate)
      ]
    );

    return result[0].toString();
  }

  try_canSubmitTask(
    _userProxy: Address,
    _provider: GelatoCore__canSubmitTaskInput_providerStruct,
    _task: GelatoCore__canSubmitTaskInput_taskStruct,
    _expiryDate: BigInt
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "canSubmitTask",
      "canSubmitTask(address,(address,address),((address,bytes)[],(address,bytes,uint8,uint8,uint256,bool)[],uint256,uint256),uint256):(string)",
      [
        ethereum.Value.fromAddress(_userProxy),
        ethereum.Value.fromTuple(_provider),
        ethereum.Value.fromTuple(_task),
        ethereum.Value.fromUnsignedBigInt(_expiryDate)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  currentTaskReceiptId(): BigInt {
    let result = super.call(
      "currentTaskReceiptId",
      "currentTaskReceiptId():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_currentTaskReceiptId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentTaskReceiptId",
      "currentTaskReceiptId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  executionWrapper(
    taskReceipt: GelatoCore__executionWrapperInputTaskReceiptStruct,
    _gasLimit: BigInt,
    _gelatoGasPrice: BigInt
  ): GelatoCore__executionWrapperResult {
    let result = super.call(
      "executionWrapper",
      "executionWrapper((uint256,address,(address,address),uint256,((address,bytes)[],(address,bytes,uint8,uint8,uint256,bool)[],uint256,uint256)[],uint256,uint256,uint256),uint256,uint256):(uint8,string)",
      [
        ethereum.Value.fromTuple(taskReceipt),
        ethereum.Value.fromUnsignedBigInt(_gasLimit),
        ethereum.Value.fromUnsignedBigInt(_gelatoGasPrice)
      ]
    );

    return new GelatoCore__executionWrapperResult(
      result[0].toI32(),
      result[1].toString()
    );
  }

  try_executionWrapper(
    taskReceipt: GelatoCore__executionWrapperInputTaskReceiptStruct,
    _gasLimit: BigInt,
    _gelatoGasPrice: BigInt
  ): ethereum.CallResult<GelatoCore__executionWrapperResult> {
    let result = super.tryCall(
      "executionWrapper",
      "executionWrapper((uint256,address,(address,address),uint256,((address,bytes)[],(address,bytes,uint8,uint8,uint256,bool)[],uint256,uint256)[],uint256,uint256,uint256),uint256,uint256):(uint8,string)",
      [
        ethereum.Value.fromTuple(taskReceipt),
        ethereum.Value.fromUnsignedBigInt(_gasLimit),
        ethereum.Value.fromUnsignedBigInt(_gelatoGasPrice)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GelatoCore__executionWrapperResult(
        value[0].toI32(),
        value[1].toString()
      )
    );
  }

  executorByProvider(param0: Address): Address {
    let result = super.call(
      "executorByProvider",
      "executorByProvider(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toAddress();
  }

  try_executorByProvider(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "executorByProvider",
      "executorByProvider(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  executorProvidersCount(param0: Address): BigInt {
    let result = super.call(
      "executorProvidersCount",
      "executorProvidersCount(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_executorProvidersCount(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "executorProvidersCount",
      "executorProvidersCount(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  executorStake(param0: Address): BigInt {
    let result = super.call(
      "executorStake",
      "executorStake(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_executorStake(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "executorStake",
      "executorStake(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  executorSuccessFee(_gas: BigInt, _gasPrice: BigInt): BigInt {
    let result = super.call(
      "executorSuccessFee",
      "executorSuccessFee(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_gas),
        ethereum.Value.fromUnsignedBigInt(_gasPrice)
      ]
    );

    return result[0].toBigInt();
  }

  try_executorSuccessFee(
    _gas: BigInt,
    _gasPrice: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "executorSuccessFee",
      "executorSuccessFee(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_gas),
        ethereum.Value.fromUnsignedBigInt(_gasPrice)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  executorSuccessShare(): BigInt {
    let result = super.call(
      "executorSuccessShare",
      "executorSuccessShare():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_executorSuccessShare(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "executorSuccessShare",
      "executorSuccessShare():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  gelatoGasPriceOracle(): Address {
    let result = super.call(
      "gelatoGasPriceOracle",
      "gelatoGasPriceOracle():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_gelatoGasPriceOracle(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "gelatoGasPriceOracle",
      "gelatoGasPriceOracle():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  gelatoMaxGas(): BigInt {
    let result = super.call("gelatoMaxGas", "gelatoMaxGas():(uint256)", []);

    return result[0].toBigInt();
  }

  try_gelatoMaxGas(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("gelatoMaxGas", "gelatoMaxGas():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hashTaskReceipt(_TR: GelatoCore__hashTaskReceiptInput_TRStruct): Bytes {
    let result = super.call(
      "hashTaskReceipt",
      "hashTaskReceipt((uint256,address,(address,address),uint256,((address,bytes)[],(address,bytes,uint8,uint8,uint256,bool)[],uint256,uint256)[],uint256,uint256,uint256)):(bytes32)",
      [ethereum.Value.fromTuple(_TR)]
    );

    return result[0].toBytes();
  }

  try_hashTaskReceipt(
    _TR: GelatoCore__hashTaskReceiptInput_TRStruct
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "hashTaskReceipt",
      "hashTaskReceipt((uint256,address,(address,address),uint256,((address,bytes)[],(address,bytes,uint8,uint8,uint256,bool)[],uint256,uint256)[],uint256,uint256,uint256)):(bytes32)",
      [ethereum.Value.fromTuple(_TR)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hashTaskSpec(_taskSpec: GelatoCore__hashTaskSpecInput_taskSpecStruct): Bytes {
    let result = super.call(
      "hashTaskSpec",
      "hashTaskSpec((address[],(address,bytes,uint8,uint8,uint256,bool)[],uint256)):(bytes32)",
      [ethereum.Value.fromTuple(_taskSpec)]
    );

    return result[0].toBytes();
  }

  try_hashTaskSpec(
    _taskSpec: GelatoCore__hashTaskSpecInput_taskSpecStruct
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "hashTaskSpec",
      "hashTaskSpec((address[],(address,bytes,uint8,uint8,uint256,bool)[],uint256)):(bytes32)",
      [ethereum.Value.fromTuple(_taskSpec)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  internalGasRequirement(): BigInt {
    let result = super.call(
      "internalGasRequirement",
      "internalGasRequirement():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_internalGasRequirement(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "internalGasRequirement",
      "internalGasRequirement():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isExecutorAssigned(_executor: Address): boolean {
    let result = super.call(
      "isExecutorAssigned",
      "isExecutorAssigned(address):(bool)",
      [ethereum.Value.fromAddress(_executor)]
    );

    return result[0].toBoolean();
  }

  try_isExecutorAssigned(_executor: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isExecutorAssigned",
      "isExecutorAssigned(address):(bool)",
      [ethereum.Value.fromAddress(_executor)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isExecutorMinStaked(_executor: Address): boolean {
    let result = super.call(
      "isExecutorMinStaked",
      "isExecutorMinStaked(address):(bool)",
      [ethereum.Value.fromAddress(_executor)]
    );

    return result[0].toBoolean();
  }

  try_isExecutorMinStaked(_executor: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isExecutorMinStaked",
      "isExecutorMinStaked(address):(bool)",
      [ethereum.Value.fromAddress(_executor)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isModuleProvided(_provider: Address, _module: Address): boolean {
    let result = super.call(
      "isModuleProvided",
      "isModuleProvided(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_provider),
        ethereum.Value.fromAddress(_module)
      ]
    );

    return result[0].toBoolean();
  }

  try_isModuleProvided(
    _provider: Address,
    _module: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isModuleProvided",
      "isModuleProvided(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_provider),
        ethereum.Value.fromAddress(_module)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOwner(): boolean {
    let result = super.call("isOwner", "isOwner():(bool)", []);

    return result[0].toBoolean();
  }

  try_isOwner(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isOwner", "isOwner():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isProviderLiquid(
    _provider: Address,
    _gelatoMaxGas: BigInt,
    _gelatoGasPrice: BigInt
  ): boolean {
    let result = super.call(
      "isProviderLiquid",
      "isProviderLiquid(address,uint256,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_provider),
        ethereum.Value.fromUnsignedBigInt(_gelatoMaxGas),
        ethereum.Value.fromUnsignedBigInt(_gelatoGasPrice)
      ]
    );

    return result[0].toBoolean();
  }

  try_isProviderLiquid(
    _provider: Address,
    _gelatoMaxGas: BigInt,
    _gelatoGasPrice: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isProviderLiquid",
      "isProviderLiquid(address,uint256,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_provider),
        ethereum.Value.fromUnsignedBigInt(_gelatoMaxGas),
        ethereum.Value.fromUnsignedBigInt(_gelatoGasPrice)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isTaskProvided(
    _userProxy: Address,
    _provider: GelatoCore__isTaskProvidedInput_providerStruct,
    _task: GelatoCore__isTaskProvidedInput_taskStruct
  ): string {
    let result = super.call(
      "isTaskProvided",
      "isTaskProvided(address,(address,address),((address,bytes)[],(address,bytes,uint8,uint8,uint256,bool)[],uint256,uint256)):(string)",
      [
        ethereum.Value.fromAddress(_userProxy),
        ethereum.Value.fromTuple(_provider),
        ethereum.Value.fromTuple(_task)
      ]
    );

    return result[0].toString();
  }

  try_isTaskProvided(
    _userProxy: Address,
    _provider: GelatoCore__isTaskProvidedInput_providerStruct,
    _task: GelatoCore__isTaskProvidedInput_taskStruct
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "isTaskProvided",
      "isTaskProvided(address,(address,address),((address,bytes)[],(address,bytes,uint8,uint8,uint256,bool)[],uint256,uint256)):(string)",
      [
        ethereum.Value.fromAddress(_userProxy),
        ethereum.Value.fromTuple(_provider),
        ethereum.Value.fromTuple(_task)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  isTaskSpecProvided(
    _provider: Address,
    _taskSpec: GelatoCore__isTaskSpecProvidedInput_taskSpecStruct
  ): string {
    let result = super.call(
      "isTaskSpecProvided",
      "isTaskSpecProvided(address,(address[],(address,bytes,uint8,uint8,uint256,bool)[],uint256)):(string)",
      [
        ethereum.Value.fromAddress(_provider),
        ethereum.Value.fromTuple(_taskSpec)
      ]
    );

    return result[0].toString();
  }

  try_isTaskSpecProvided(
    _provider: Address,
    _taskSpec: GelatoCore__isTaskSpecProvidedInput_taskSpecStruct
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "isTaskSpecProvided",
      "isTaskSpecProvided(address,(address[],(address,bytes,uint8,uint8,uint256,bool)[],uint256)):(string)",
      [
        ethereum.Value.fromAddress(_provider),
        ethereum.Value.fromTuple(_taskSpec)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  minExecProviderFunds(_gelatoMaxGas: BigInt, _gelatoGasPrice: BigInt): BigInt {
    let result = super.call(
      "minExecProviderFunds",
      "minExecProviderFunds(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_gelatoMaxGas),
        ethereum.Value.fromUnsignedBigInt(_gelatoGasPrice)
      ]
    );

    return result[0].toBigInt();
  }

  try_minExecProviderFunds(
    _gelatoMaxGas: BigInt,
    _gelatoGasPrice: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minExecProviderFunds",
      "minExecProviderFunds(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_gelatoMaxGas),
        ethereum.Value.fromUnsignedBigInt(_gelatoGasPrice)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minExecutorStake(): BigInt {
    let result = super.call(
      "minExecutorStake",
      "minExecutorStake():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_minExecutorStake(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minExecutorStake",
      "minExecutorStake():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  oracleRequestData(): Bytes {
    let result = super.call(
      "oracleRequestData",
      "oracleRequestData():(bytes)",
      []
    );

    return result[0].toBytes();
  }

  try_oracleRequestData(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "oracleRequestData",
      "oracleRequestData():(bytes)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  providerCanExec(
    _userProxy: Address,
    _provider: GelatoCore__providerCanExecInput_providerStruct,
    _task: GelatoCore__providerCanExecInput_taskStruct,
    _gelatoGasPrice: BigInt
  ): string {
    let result = super.call(
      "providerCanExec",
      "providerCanExec(address,(address,address),((address,bytes)[],(address,bytes,uint8,uint8,uint256,bool)[],uint256,uint256),uint256):(string)",
      [
        ethereum.Value.fromAddress(_userProxy),
        ethereum.Value.fromTuple(_provider),
        ethereum.Value.fromTuple(_task),
        ethereum.Value.fromUnsignedBigInt(_gelatoGasPrice)
      ]
    );

    return result[0].toString();
  }

  try_providerCanExec(
    _userProxy: Address,
    _provider: GelatoCore__providerCanExecInput_providerStruct,
    _task: GelatoCore__providerCanExecInput_taskStruct,
    _gelatoGasPrice: BigInt
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "providerCanExec",
      "providerCanExec(address,(address,address),((address,bytes)[],(address,bytes,uint8,uint8,uint256,bool)[],uint256,uint256),uint256):(string)",
      [
        ethereum.Value.fromAddress(_userProxy),
        ethereum.Value.fromTuple(_provider),
        ethereum.Value.fromTuple(_task),
        ethereum.Value.fromUnsignedBigInt(_gelatoGasPrice)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  providerFunds(param0: Address): BigInt {
    let result = super.call(
      "providerFunds",
      "providerFunds(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_providerFunds(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "providerFunds",
      "providerFunds(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  providerModuleChecks(
    _userProxy: Address,
    _provider: GelatoCore__providerModuleChecksInput_providerStruct,
    _task: GelatoCore__providerModuleChecksInput_taskStruct
  ): string {
    let result = super.call(
      "providerModuleChecks",
      "providerModuleChecks(address,(address,address),((address,bytes)[],(address,bytes,uint8,uint8,uint256,bool)[],uint256,uint256)):(string)",
      [
        ethereum.Value.fromAddress(_userProxy),
        ethereum.Value.fromTuple(_provider),
        ethereum.Value.fromTuple(_task)
      ]
    );

    return result[0].toString();
  }

  try_providerModuleChecks(
    _userProxy: Address,
    _provider: GelatoCore__providerModuleChecksInput_providerStruct,
    _task: GelatoCore__providerModuleChecksInput_taskStruct
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "providerModuleChecks",
      "providerModuleChecks(address,(address,address),((address,bytes)[],(address,bytes,uint8,uint8,uint256,bool)[],uint256,uint256)):(string)",
      [
        ethereum.Value.fromAddress(_userProxy),
        ethereum.Value.fromTuple(_provider),
        ethereum.Value.fromTuple(_task)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  providerModules(_provider: Address): Array<Address> {
    let result = super.call(
      "providerModules",
      "providerModules(address):(address[])",
      [ethereum.Value.fromAddress(_provider)]
    );

    return result[0].toAddressArray();
  }

  try_providerModules(_provider: Address): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "providerModules",
      "providerModules(address):(address[])",
      [ethereum.Value.fromAddress(_provider)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  sysAdminFunds(): BigInt {
    let result = super.call("sysAdminFunds", "sysAdminFunds():(uint256)", []);

    return result[0].toBigInt();
  }

  try_sysAdminFunds(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "sysAdminFunds",
      "sysAdminFunds():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  sysAdminSuccessFee(_gas: BigInt, _gasPrice: BigInt): BigInt {
    let result = super.call(
      "sysAdminSuccessFee",
      "sysAdminSuccessFee(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_gas),
        ethereum.Value.fromUnsignedBigInt(_gasPrice)
      ]
    );

    return result[0].toBigInt();
  }

  try_sysAdminSuccessFee(
    _gas: BigInt,
    _gasPrice: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "sysAdminSuccessFee",
      "sysAdminSuccessFee(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_gas),
        ethereum.Value.fromUnsignedBigInt(_gasPrice)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  sysAdminSuccessShare(): BigInt {
    let result = super.call(
      "sysAdminSuccessShare",
      "sysAdminSuccessShare():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_sysAdminSuccessShare(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "sysAdminSuccessShare",
      "sysAdminSuccessShare():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  taskReceiptHash(param0: BigInt): Bytes {
    let result = super.call(
      "taskReceiptHash",
      "taskReceiptHash(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBytes();
  }

  try_taskReceiptHash(param0: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "taskReceiptHash",
      "taskReceiptHash(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  taskSpecGasPriceCeil(param0: Address, param1: Bytes): BigInt {
    let result = super.call(
      "taskSpecGasPriceCeil",
      "taskSpecGasPriceCeil(address,bytes32):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromFixedBytes(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_taskSpecGasPriceCeil(
    param0: Address,
    param1: Bytes
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "taskSpecGasPriceCeil",
      "taskSpecGasPriceCeil(address,bytes32):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromFixedBytes(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalSuccessShare(): BigInt {
    let result = super.call(
      "totalSuccessShare",
      "totalSuccessShare():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalSuccessShare(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalSuccessShare",
      "totalSuccessShare():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  unprovideFunds(_withdrawAmount: BigInt): BigInt {
    let result = super.call(
      "unprovideFunds",
      "unprovideFunds(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_withdrawAmount)]
    );

    return result[0].toBigInt();
  }

  try_unprovideFunds(_withdrawAmount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "unprovideFunds",
      "unprovideFunds(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_withdrawAmount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  withdrawExcessExecutorStake(_withdrawAmount: BigInt): BigInt {
    let result = super.call(
      "withdrawExcessExecutorStake",
      "withdrawExcessExecutorStake(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_withdrawAmount)]
    );

    return result[0].toBigInt();
  }

  try_withdrawExcessExecutorStake(
    _withdrawAmount: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "withdrawExcessExecutorStake",
      "withdrawExcessExecutorStake(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_withdrawAmount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  withdrawSysAdminFunds(_amount: BigInt, _to: Address): BigInt {
    let result = super.call(
      "withdrawSysAdminFunds",
      "withdrawSysAdminFunds(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromAddress(_to)
      ]
    );

    return result[0].toBigInt();
  }

  try_withdrawSysAdminFunds(
    _amount: BigInt,
    _to: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "withdrawSysAdminFunds",
      "withdrawSysAdminFunds(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromAddress(_to)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _(): ConstructorCall_Struct {
    return this._call.inputValues[0].value.toTuple() as ConstructorCall_Struct;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall_Struct extends ethereum.Tuple {
  get gelatoGasPriceOracle(): Address {
    return this[0].toAddress();
  }

  get oracleRequestData(): Bytes {
    return this[1].toBytes();
  }

  get gelatoMaxGas(): BigInt {
    return this[2].toBigInt();
  }

  get internalGasRequirement(): BigInt {
    return this[3].toBigInt();
  }

  get minExecutorStake(): BigInt {
    return this[4].toBigInt();
  }

  get executorSuccessShare(): BigInt {
    return this[5].toBigInt();
  }

  get sysAdminSuccessShare(): BigInt {
    return this[6].toBigInt();
  }

  get totalSuccessShare(): BigInt {
    return this[7].toBigInt();
  }
}

export class AddProviderModulesCall extends ethereum.Call {
  get inputs(): AddProviderModulesCall__Inputs {
    return new AddProviderModulesCall__Inputs(this);
  }

  get outputs(): AddProviderModulesCall__Outputs {
    return new AddProviderModulesCall__Outputs(this);
  }
}

export class AddProviderModulesCall__Inputs {
  _call: AddProviderModulesCall;

  constructor(call: AddProviderModulesCall) {
    this._call = call;
  }

  get _modules(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class AddProviderModulesCall__Outputs {
  _call: AddProviderModulesCall;

  constructor(call: AddProviderModulesCall) {
    this._call = call;
  }
}

export class CancelTaskCall extends ethereum.Call {
  get inputs(): CancelTaskCall__Inputs {
    return new CancelTaskCall__Inputs(this);
  }

  get outputs(): CancelTaskCall__Outputs {
    return new CancelTaskCall__Outputs(this);
  }
}

export class CancelTaskCall__Inputs {
  _call: CancelTaskCall;

  constructor(call: CancelTaskCall) {
    this._call = call;
  }

  get _TR(): CancelTaskCall_TRStruct {
    return this._call.inputValues[0].value.toTuple() as CancelTaskCall_TRStruct;
  }
}

export class CancelTaskCall__Outputs {
  _call: CancelTaskCall;

  constructor(call: CancelTaskCall) {
    this._call = call;
  }
}

export class CancelTaskCall_TRStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get userProxy(): Address {
    return this[1].toAddress();
  }

  get provider(): CancelTaskCall_TRProviderStruct {
    return this[2].toTuple() as CancelTaskCall_TRProviderStruct;
  }

  get index(): BigInt {
    return this[3].toBigInt();
  }

  get tasks(): Array<CancelTaskCall_TRTasksStruct> {
    return this[4].toTupleArray<CancelTaskCall_TRTasksStruct>();
  }

  get expiryDate(): BigInt {
    return this[5].toBigInt();
  }

  get cycleId(): BigInt {
    return this[6].toBigInt();
  }

  get submissionsLeft(): BigInt {
    return this[7].toBigInt();
  }
}

export class CancelTaskCall_TRProviderStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get module(): Address {
    return this[1].toAddress();
  }
}

export class CancelTaskCall_TRTasksStruct extends ethereum.Tuple {
  get conditions(): Array<CancelTaskCall_TRTasksConditionsStruct> {
    return this[0].toTupleArray<CancelTaskCall_TRTasksConditionsStruct>();
  }

  get actions(): Array<CancelTaskCall_TRTasksActionsStruct> {
    return this[1].toTupleArray<CancelTaskCall_TRTasksActionsStruct>();
  }

  get selfProviderGasLimit(): BigInt {
    return this[2].toBigInt();
  }

  get selfProviderGasPriceCeil(): BigInt {
    return this[3].toBigInt();
  }
}

export class CancelTaskCall_TRTasksConditionsStruct extends ethereum.Tuple {
  get inst(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class CancelTaskCall_TRTasksActionsStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get operation(): i32 {
    return this[2].toI32();
  }

  get dataFlow(): i32 {
    return this[3].toI32();
  }

  get value(): BigInt {
    return this[4].toBigInt();
  }

  get termsOkCheck(): boolean {
    return this[5].toBoolean();
  }
}

export class ExecCall extends ethereum.Call {
  get inputs(): ExecCall__Inputs {
    return new ExecCall__Inputs(this);
  }

  get outputs(): ExecCall__Outputs {
    return new ExecCall__Outputs(this);
  }
}

export class ExecCall__Inputs {
  _call: ExecCall;

  constructor(call: ExecCall) {
    this._call = call;
  }

  get _TR(): ExecCall_TRStruct {
    return this._call.inputValues[0].value.toTuple() as ExecCall_TRStruct;
  }
}

export class ExecCall__Outputs {
  _call: ExecCall;

  constructor(call: ExecCall) {
    this._call = call;
  }
}

export class ExecCall_TRStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get userProxy(): Address {
    return this[1].toAddress();
  }

  get provider(): ExecCall_TRProviderStruct {
    return this[2].toTuple() as ExecCall_TRProviderStruct;
  }

  get index(): BigInt {
    return this[3].toBigInt();
  }

  get tasks(): Array<ExecCall_TRTasksStruct> {
    return this[4].toTupleArray<ExecCall_TRTasksStruct>();
  }

  get expiryDate(): BigInt {
    return this[5].toBigInt();
  }

  get cycleId(): BigInt {
    return this[6].toBigInt();
  }

  get submissionsLeft(): BigInt {
    return this[7].toBigInt();
  }
}

export class ExecCall_TRProviderStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get module(): Address {
    return this[1].toAddress();
  }
}

export class ExecCall_TRTasksStruct extends ethereum.Tuple {
  get conditions(): Array<ExecCall_TRTasksConditionsStruct> {
    return this[0].toTupleArray<ExecCall_TRTasksConditionsStruct>();
  }

  get actions(): Array<ExecCall_TRTasksActionsStruct> {
    return this[1].toTupleArray<ExecCall_TRTasksActionsStruct>();
  }

  get selfProviderGasLimit(): BigInt {
    return this[2].toBigInt();
  }

  get selfProviderGasPriceCeil(): BigInt {
    return this[3].toBigInt();
  }
}

export class ExecCall_TRTasksConditionsStruct extends ethereum.Tuple {
  get inst(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class ExecCall_TRTasksActionsStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get operation(): i32 {
    return this[2].toI32();
  }

  get dataFlow(): i32 {
    return this[3].toI32();
  }

  get value(): BigInt {
    return this[4].toBigInt();
  }

  get termsOkCheck(): boolean {
    return this[5].toBoolean();
  }
}

export class ExecutionWrapperCall extends ethereum.Call {
  get inputs(): ExecutionWrapperCall__Inputs {
    return new ExecutionWrapperCall__Inputs(this);
  }

  get outputs(): ExecutionWrapperCall__Outputs {
    return new ExecutionWrapperCall__Outputs(this);
  }
}

export class ExecutionWrapperCall__Inputs {
  _call: ExecutionWrapperCall;

  constructor(call: ExecutionWrapperCall) {
    this._call = call;
  }

  get taskReceipt(): ExecutionWrapperCallTaskReceiptStruct {
    return this._call.inputValues[0].value.toTuple() as ExecutionWrapperCallTaskReceiptStruct;
  }

  get _gasLimit(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _gelatoGasPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ExecutionWrapperCall__Outputs {
  _call: ExecutionWrapperCall;

  constructor(call: ExecutionWrapperCall) {
    this._call = call;
  }

  get value0(): i32 {
    return this._call.outputValues[0].value.toI32();
  }

  get value1(): string {
    return this._call.outputValues[1].value.toString();
  }
}

export class ExecutionWrapperCallTaskReceiptStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get userProxy(): Address {
    return this[1].toAddress();
  }

  get provider(): ExecutionWrapperCallTaskReceiptProviderStruct {
    return this[2].toTuple() as ExecutionWrapperCallTaskReceiptProviderStruct;
  }

  get index(): BigInt {
    return this[3].toBigInt();
  }

  get tasks(): Array<ExecutionWrapperCallTaskReceiptTasksStruct> {
    return this[4].toTupleArray<ExecutionWrapperCallTaskReceiptTasksStruct>();
  }

  get expiryDate(): BigInt {
    return this[5].toBigInt();
  }

  get cycleId(): BigInt {
    return this[6].toBigInt();
  }

  get submissionsLeft(): BigInt {
    return this[7].toBigInt();
  }
}

export class ExecutionWrapperCallTaskReceiptProviderStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get module(): Address {
    return this[1].toAddress();
  }
}

export class ExecutionWrapperCallTaskReceiptTasksStruct extends ethereum.Tuple {
  get conditions(): Array<
    ExecutionWrapperCallTaskReceiptTasksConditionsStruct
  > {
    return this[0].toTupleArray<
      ExecutionWrapperCallTaskReceiptTasksConditionsStruct
    >();
  }

  get actions(): Array<ExecutionWrapperCallTaskReceiptTasksActionsStruct> {
    return this[1].toTupleArray<
      ExecutionWrapperCallTaskReceiptTasksActionsStruct
    >();
  }

  get selfProviderGasLimit(): BigInt {
    return this[2].toBigInt();
  }

  get selfProviderGasPriceCeil(): BigInt {
    return this[3].toBigInt();
  }
}

export class ExecutionWrapperCallTaskReceiptTasksConditionsStruct extends ethereum.Tuple {
  get inst(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class ExecutionWrapperCallTaskReceiptTasksActionsStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get operation(): i32 {
    return this[2].toI32();
  }

  get dataFlow(): i32 {
    return this[3].toI32();
  }

  get value(): BigInt {
    return this[4].toBigInt();
  }

  get termsOkCheck(): boolean {
    return this[5].toBoolean();
  }
}

export class ExecutorAssignsExecutorCall extends ethereum.Call {
  get inputs(): ExecutorAssignsExecutorCall__Inputs {
    return new ExecutorAssignsExecutorCall__Inputs(this);
  }

  get outputs(): ExecutorAssignsExecutorCall__Outputs {
    return new ExecutorAssignsExecutorCall__Outputs(this);
  }
}

export class ExecutorAssignsExecutorCall__Inputs {
  _call: ExecutorAssignsExecutorCall;

  constructor(call: ExecutorAssignsExecutorCall) {
    this._call = call;
  }

  get _provider(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _newExecutor(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ExecutorAssignsExecutorCall__Outputs {
  _call: ExecutorAssignsExecutorCall;

  constructor(call: ExecutorAssignsExecutorCall) {
    this._call = call;
  }
}

export class MultiCancelTasksCall extends ethereum.Call {
  get inputs(): MultiCancelTasksCall__Inputs {
    return new MultiCancelTasksCall__Inputs(this);
  }

  get outputs(): MultiCancelTasksCall__Outputs {
    return new MultiCancelTasksCall__Outputs(this);
  }
}

export class MultiCancelTasksCall__Inputs {
  _call: MultiCancelTasksCall;

  constructor(call: MultiCancelTasksCall) {
    this._call = call;
  }

  get _taskReceipts(): Array<MultiCancelTasksCall_taskReceiptsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      MultiCancelTasksCall_taskReceiptsStruct
    >();
  }
}

export class MultiCancelTasksCall__Outputs {
  _call: MultiCancelTasksCall;

  constructor(call: MultiCancelTasksCall) {
    this._call = call;
  }
}

export class MultiCancelTasksCall_taskReceiptsStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get userProxy(): Address {
    return this[1].toAddress();
  }

  get provider(): MultiCancelTasksCall_taskReceiptsProviderStruct {
    return this[2].toTuple() as MultiCancelTasksCall_taskReceiptsProviderStruct;
  }

  get index(): BigInt {
    return this[3].toBigInt();
  }

  get tasks(): Array<MultiCancelTasksCall_taskReceiptsTasksStruct> {
    return this[4].toTupleArray<MultiCancelTasksCall_taskReceiptsTasksStruct>();
  }

  get expiryDate(): BigInt {
    return this[5].toBigInt();
  }

  get cycleId(): BigInt {
    return this[6].toBigInt();
  }

  get submissionsLeft(): BigInt {
    return this[7].toBigInt();
  }
}

export class MultiCancelTasksCall_taskReceiptsProviderStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get module(): Address {
    return this[1].toAddress();
  }
}

export class MultiCancelTasksCall_taskReceiptsTasksStruct extends ethereum.Tuple {
  get conditions(): Array<
    MultiCancelTasksCall_taskReceiptsTasksConditionsStruct
  > {
    return this[0].toTupleArray<
      MultiCancelTasksCall_taskReceiptsTasksConditionsStruct
    >();
  }

  get actions(): Array<MultiCancelTasksCall_taskReceiptsTasksActionsStruct> {
    return this[1].toTupleArray<
      MultiCancelTasksCall_taskReceiptsTasksActionsStruct
    >();
  }

  get selfProviderGasLimit(): BigInt {
    return this[2].toBigInt();
  }

  get selfProviderGasPriceCeil(): BigInt {
    return this[3].toBigInt();
  }
}

export class MultiCancelTasksCall_taskReceiptsTasksConditionsStruct extends ethereum.Tuple {
  get inst(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class MultiCancelTasksCall_taskReceiptsTasksActionsStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get operation(): i32 {
    return this[2].toI32();
  }

  get dataFlow(): i32 {
    return this[3].toI32();
  }

  get value(): BigInt {
    return this[4].toBigInt();
  }

  get termsOkCheck(): boolean {
    return this[5].toBoolean();
  }
}

export class MultiProvideCall extends ethereum.Call {
  get inputs(): MultiProvideCall__Inputs {
    return new MultiProvideCall__Inputs(this);
  }

  get outputs(): MultiProvideCall__Outputs {
    return new MultiProvideCall__Outputs(this);
  }
}

export class MultiProvideCall__Inputs {
  _call: MultiProvideCall;

  constructor(call: MultiProvideCall) {
    this._call = call;
  }

  get _executor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _taskSpecs(): Array<MultiProvideCall_taskSpecsStruct> {
    return this._call.inputValues[1].value.toTupleArray<
      MultiProvideCall_taskSpecsStruct
    >();
  }

  get _modules(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }
}

export class MultiProvideCall__Outputs {
  _call: MultiProvideCall;

  constructor(call: MultiProvideCall) {
    this._call = call;
  }
}

export class MultiProvideCall_taskSpecsStruct extends ethereum.Tuple {
  get conditions(): Array<Address> {
    return this[0].toAddressArray();
  }

  get actions(): Array<MultiProvideCall_taskSpecsActionsStruct> {
    return this[1].toTupleArray<MultiProvideCall_taskSpecsActionsStruct>();
  }

  get gasPriceCeil(): BigInt {
    return this[2].toBigInt();
  }
}

export class MultiProvideCall_taskSpecsActionsStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get operation(): i32 {
    return this[2].toI32();
  }

  get dataFlow(): i32 {
    return this[3].toI32();
  }

  get value(): BigInt {
    return this[4].toBigInt();
  }

  get termsOkCheck(): boolean {
    return this[5].toBoolean();
  }
}

export class MultiReassignProvidersCall extends ethereum.Call {
  get inputs(): MultiReassignProvidersCall__Inputs {
    return new MultiReassignProvidersCall__Inputs(this);
  }

  get outputs(): MultiReassignProvidersCall__Outputs {
    return new MultiReassignProvidersCall__Outputs(this);
  }
}

export class MultiReassignProvidersCall__Inputs {
  _call: MultiReassignProvidersCall;

  constructor(call: MultiReassignProvidersCall) {
    this._call = call;
  }

  get _providers(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _newExecutor(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class MultiReassignProvidersCall__Outputs {
  _call: MultiReassignProvidersCall;

  constructor(call: MultiReassignProvidersCall) {
    this._call = call;
  }
}

export class MultiUnprovideCall extends ethereum.Call {
  get inputs(): MultiUnprovideCall__Inputs {
    return new MultiUnprovideCall__Inputs(this);
  }

  get outputs(): MultiUnprovideCall__Outputs {
    return new MultiUnprovideCall__Outputs(this);
  }
}

export class MultiUnprovideCall__Inputs {
  _call: MultiUnprovideCall;

  constructor(call: MultiUnprovideCall) {
    this._call = call;
  }

  get _withdrawAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _taskSpecs(): Array<MultiUnprovideCall_taskSpecsStruct> {
    return this._call.inputValues[1].value.toTupleArray<
      MultiUnprovideCall_taskSpecsStruct
    >();
  }

  get _modules(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }
}

export class MultiUnprovideCall__Outputs {
  _call: MultiUnprovideCall;

  constructor(call: MultiUnprovideCall) {
    this._call = call;
  }
}

export class MultiUnprovideCall_taskSpecsStruct extends ethereum.Tuple {
  get conditions(): Array<Address> {
    return this[0].toAddressArray();
  }

  get actions(): Array<MultiUnprovideCall_taskSpecsActionsStruct> {
    return this[1].toTupleArray<MultiUnprovideCall_taskSpecsActionsStruct>();
  }

  get gasPriceCeil(): BigInt {
    return this[2].toBigInt();
  }
}

export class MultiUnprovideCall_taskSpecsActionsStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get operation(): i32 {
    return this[2].toI32();
  }

  get dataFlow(): i32 {
    return this[3].toI32();
  }

  get value(): BigInt {
    return this[4].toBigInt();
  }

  get termsOkCheck(): boolean {
    return this[5].toBoolean();
  }
}

export class ProvideFundsCall extends ethereum.Call {
  get inputs(): ProvideFundsCall__Inputs {
    return new ProvideFundsCall__Inputs(this);
  }

  get outputs(): ProvideFundsCall__Outputs {
    return new ProvideFundsCall__Outputs(this);
  }
}

export class ProvideFundsCall__Inputs {
  _call: ProvideFundsCall;

  constructor(call: ProvideFundsCall) {
    this._call = call;
  }

  get _provider(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ProvideFundsCall__Outputs {
  _call: ProvideFundsCall;

  constructor(call: ProvideFundsCall) {
    this._call = call;
  }
}

export class ProvideTaskSpecsCall extends ethereum.Call {
  get inputs(): ProvideTaskSpecsCall__Inputs {
    return new ProvideTaskSpecsCall__Inputs(this);
  }

  get outputs(): ProvideTaskSpecsCall__Outputs {
    return new ProvideTaskSpecsCall__Outputs(this);
  }
}

export class ProvideTaskSpecsCall__Inputs {
  _call: ProvideTaskSpecsCall;

  constructor(call: ProvideTaskSpecsCall) {
    this._call = call;
  }

  get _taskSpecs(): Array<ProvideTaskSpecsCall_taskSpecsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      ProvideTaskSpecsCall_taskSpecsStruct
    >();
  }
}

export class ProvideTaskSpecsCall__Outputs {
  _call: ProvideTaskSpecsCall;

  constructor(call: ProvideTaskSpecsCall) {
    this._call = call;
  }
}

export class ProvideTaskSpecsCall_taskSpecsStruct extends ethereum.Tuple {
  get conditions(): Array<Address> {
    return this[0].toAddressArray();
  }

  get actions(): Array<ProvideTaskSpecsCall_taskSpecsActionsStruct> {
    return this[1].toTupleArray<ProvideTaskSpecsCall_taskSpecsActionsStruct>();
  }

  get gasPriceCeil(): BigInt {
    return this[2].toBigInt();
  }
}

export class ProvideTaskSpecsCall_taskSpecsActionsStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get operation(): i32 {
    return this[2].toI32();
  }

  get dataFlow(): i32 {
    return this[3].toI32();
  }

  get value(): BigInt {
    return this[4].toBigInt();
  }

  get termsOkCheck(): boolean {
    return this[5].toBoolean();
  }
}

export class ProviderAssignsExecutorCall extends ethereum.Call {
  get inputs(): ProviderAssignsExecutorCall__Inputs {
    return new ProviderAssignsExecutorCall__Inputs(this);
  }

  get outputs(): ProviderAssignsExecutorCall__Outputs {
    return new ProviderAssignsExecutorCall__Outputs(this);
  }
}

export class ProviderAssignsExecutorCall__Inputs {
  _call: ProviderAssignsExecutorCall;

  constructor(call: ProviderAssignsExecutorCall) {
    this._call = call;
  }

  get _newExecutor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ProviderAssignsExecutorCall__Outputs {
  _call: ProviderAssignsExecutorCall;

  constructor(call: ProviderAssignsExecutorCall) {
    this._call = call;
  }
}

export class RemoveProviderModulesCall extends ethereum.Call {
  get inputs(): RemoveProviderModulesCall__Inputs {
    return new RemoveProviderModulesCall__Inputs(this);
  }

  get outputs(): RemoveProviderModulesCall__Outputs {
    return new RemoveProviderModulesCall__Outputs(this);
  }
}

export class RemoveProviderModulesCall__Inputs {
  _call: RemoveProviderModulesCall;

  constructor(call: RemoveProviderModulesCall) {
    this._call = call;
  }

  get _modules(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class RemoveProviderModulesCall__Outputs {
  _call: RemoveProviderModulesCall;

  constructor(call: RemoveProviderModulesCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetExecutorSuccessShareCall extends ethereum.Call {
  get inputs(): SetExecutorSuccessShareCall__Inputs {
    return new SetExecutorSuccessShareCall__Inputs(this);
  }

  get outputs(): SetExecutorSuccessShareCall__Outputs {
    return new SetExecutorSuccessShareCall__Outputs(this);
  }
}

export class SetExecutorSuccessShareCall__Inputs {
  _call: SetExecutorSuccessShareCall;

  constructor(call: SetExecutorSuccessShareCall) {
    this._call = call;
  }

  get _percentage(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetExecutorSuccessShareCall__Outputs {
  _call: SetExecutorSuccessShareCall;

  constructor(call: SetExecutorSuccessShareCall) {
    this._call = call;
  }
}

export class SetGelatoGasPriceOracleCall extends ethereum.Call {
  get inputs(): SetGelatoGasPriceOracleCall__Inputs {
    return new SetGelatoGasPriceOracleCall__Inputs(this);
  }

  get outputs(): SetGelatoGasPriceOracleCall__Outputs {
    return new SetGelatoGasPriceOracleCall__Outputs(this);
  }
}

export class SetGelatoGasPriceOracleCall__Inputs {
  _call: SetGelatoGasPriceOracleCall;

  constructor(call: SetGelatoGasPriceOracleCall) {
    this._call = call;
  }

  get _newOracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetGelatoGasPriceOracleCall__Outputs {
  _call: SetGelatoGasPriceOracleCall;

  constructor(call: SetGelatoGasPriceOracleCall) {
    this._call = call;
  }
}

export class SetGelatoMaxGasCall extends ethereum.Call {
  get inputs(): SetGelatoMaxGasCall__Inputs {
    return new SetGelatoMaxGasCall__Inputs(this);
  }

  get outputs(): SetGelatoMaxGasCall__Outputs {
    return new SetGelatoMaxGasCall__Outputs(this);
  }
}

export class SetGelatoMaxGasCall__Inputs {
  _call: SetGelatoMaxGasCall;

  constructor(call: SetGelatoMaxGasCall) {
    this._call = call;
  }

  get _newMaxGas(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetGelatoMaxGasCall__Outputs {
  _call: SetGelatoMaxGasCall;

  constructor(call: SetGelatoMaxGasCall) {
    this._call = call;
  }
}

export class SetInternalGasRequirementCall extends ethereum.Call {
  get inputs(): SetInternalGasRequirementCall__Inputs {
    return new SetInternalGasRequirementCall__Inputs(this);
  }

  get outputs(): SetInternalGasRequirementCall__Outputs {
    return new SetInternalGasRequirementCall__Outputs(this);
  }
}

export class SetInternalGasRequirementCall__Inputs {
  _call: SetInternalGasRequirementCall;

  constructor(call: SetInternalGasRequirementCall) {
    this._call = call;
  }

  get _newRequirement(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetInternalGasRequirementCall__Outputs {
  _call: SetInternalGasRequirementCall;

  constructor(call: SetInternalGasRequirementCall) {
    this._call = call;
  }
}

export class SetMinExecutorStakeCall extends ethereum.Call {
  get inputs(): SetMinExecutorStakeCall__Inputs {
    return new SetMinExecutorStakeCall__Inputs(this);
  }

  get outputs(): SetMinExecutorStakeCall__Outputs {
    return new SetMinExecutorStakeCall__Outputs(this);
  }
}

export class SetMinExecutorStakeCall__Inputs {
  _call: SetMinExecutorStakeCall;

  constructor(call: SetMinExecutorStakeCall) {
    this._call = call;
  }

  get _newMin(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinExecutorStakeCall__Outputs {
  _call: SetMinExecutorStakeCall;

  constructor(call: SetMinExecutorStakeCall) {
    this._call = call;
  }
}

export class SetOracleRequestDataCall extends ethereum.Call {
  get inputs(): SetOracleRequestDataCall__Inputs {
    return new SetOracleRequestDataCall__Inputs(this);
  }

  get outputs(): SetOracleRequestDataCall__Outputs {
    return new SetOracleRequestDataCall__Outputs(this);
  }
}

export class SetOracleRequestDataCall__Inputs {
  _call: SetOracleRequestDataCall;

  constructor(call: SetOracleRequestDataCall) {
    this._call = call;
  }

  get _requestData(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetOracleRequestDataCall__Outputs {
  _call: SetOracleRequestDataCall;

  constructor(call: SetOracleRequestDataCall) {
    this._call = call;
  }
}

export class SetSysAdminSuccessShareCall extends ethereum.Call {
  get inputs(): SetSysAdminSuccessShareCall__Inputs {
    return new SetSysAdminSuccessShareCall__Inputs(this);
  }

  get outputs(): SetSysAdminSuccessShareCall__Outputs {
    return new SetSysAdminSuccessShareCall__Outputs(this);
  }
}

export class SetSysAdminSuccessShareCall__Inputs {
  _call: SetSysAdminSuccessShareCall;

  constructor(call: SetSysAdminSuccessShareCall) {
    this._call = call;
  }

  get _percentage(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetSysAdminSuccessShareCall__Outputs {
  _call: SetSysAdminSuccessShareCall;

  constructor(call: SetSysAdminSuccessShareCall) {
    this._call = call;
  }
}

export class SetTaskSpecGasPriceCeilCall extends ethereum.Call {
  get inputs(): SetTaskSpecGasPriceCeilCall__Inputs {
    return new SetTaskSpecGasPriceCeilCall__Inputs(this);
  }

  get outputs(): SetTaskSpecGasPriceCeilCall__Outputs {
    return new SetTaskSpecGasPriceCeilCall__Outputs(this);
  }
}

export class SetTaskSpecGasPriceCeilCall__Inputs {
  _call: SetTaskSpecGasPriceCeilCall;

  constructor(call: SetTaskSpecGasPriceCeilCall) {
    this._call = call;
  }

  get _taskSpecHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _gasPriceCeil(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetTaskSpecGasPriceCeilCall__Outputs {
  _call: SetTaskSpecGasPriceCeilCall;

  constructor(call: SetTaskSpecGasPriceCeilCall) {
    this._call = call;
  }
}

export class StakeExecutorCall extends ethereum.Call {
  get inputs(): StakeExecutorCall__Inputs {
    return new StakeExecutorCall__Inputs(this);
  }

  get outputs(): StakeExecutorCall__Outputs {
    return new StakeExecutorCall__Outputs(this);
  }
}

export class StakeExecutorCall__Inputs {
  _call: StakeExecutorCall;

  constructor(call: StakeExecutorCall) {
    this._call = call;
  }
}

export class StakeExecutorCall__Outputs {
  _call: StakeExecutorCall;

  constructor(call: StakeExecutorCall) {
    this._call = call;
  }
}

export class SubmitTaskCall extends ethereum.Call {
  get inputs(): SubmitTaskCall__Inputs {
    return new SubmitTaskCall__Inputs(this);
  }

  get outputs(): SubmitTaskCall__Outputs {
    return new SubmitTaskCall__Outputs(this);
  }
}

export class SubmitTaskCall__Inputs {
  _call: SubmitTaskCall;

  constructor(call: SubmitTaskCall) {
    this._call = call;
  }

  get _provider(): SubmitTaskCall_providerStruct {
    return this._call.inputValues[0].value.toTuple() as SubmitTaskCall_providerStruct;
  }

  get _task(): SubmitTaskCall_taskStruct {
    return this._call.inputValues[1].value.toTuple() as SubmitTaskCall_taskStruct;
  }

  get _expiryDate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SubmitTaskCall__Outputs {
  _call: SubmitTaskCall;

  constructor(call: SubmitTaskCall) {
    this._call = call;
  }
}

export class SubmitTaskCall_providerStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get module(): Address {
    return this[1].toAddress();
  }
}

export class SubmitTaskCall_taskStruct extends ethereum.Tuple {
  get conditions(): Array<SubmitTaskCall_taskConditionsStruct> {
    return this[0].toTupleArray<SubmitTaskCall_taskConditionsStruct>();
  }

  get actions(): Array<SubmitTaskCall_taskActionsStruct> {
    return this[1].toTupleArray<SubmitTaskCall_taskActionsStruct>();
  }

  get selfProviderGasLimit(): BigInt {
    return this[2].toBigInt();
  }

  get selfProviderGasPriceCeil(): BigInt {
    return this[3].toBigInt();
  }
}

export class SubmitTaskCall_taskConditionsStruct extends ethereum.Tuple {
  get inst(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class SubmitTaskCall_taskActionsStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get operation(): i32 {
    return this[2].toI32();
  }

  get dataFlow(): i32 {
    return this[3].toI32();
  }

  get value(): BigInt {
    return this[4].toBigInt();
  }

  get termsOkCheck(): boolean {
    return this[5].toBoolean();
  }
}

export class SubmitTaskChainCall extends ethereum.Call {
  get inputs(): SubmitTaskChainCall__Inputs {
    return new SubmitTaskChainCall__Inputs(this);
  }

  get outputs(): SubmitTaskChainCall__Outputs {
    return new SubmitTaskChainCall__Outputs(this);
  }
}

export class SubmitTaskChainCall__Inputs {
  _call: SubmitTaskChainCall;

  constructor(call: SubmitTaskChainCall) {
    this._call = call;
  }

  get _provider(): SubmitTaskChainCall_providerStruct {
    return this._call.inputValues[0].value.toTuple() as SubmitTaskChainCall_providerStruct;
  }

  get _tasks(): Array<SubmitTaskChainCall_tasksStruct> {
    return this._call.inputValues[1].value.toTupleArray<
      SubmitTaskChainCall_tasksStruct
    >();
  }

  get _expiryDate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _sumOfRequestedTaskSubmits(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class SubmitTaskChainCall__Outputs {
  _call: SubmitTaskChainCall;

  constructor(call: SubmitTaskChainCall) {
    this._call = call;
  }
}

export class SubmitTaskChainCall_providerStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get module(): Address {
    return this[1].toAddress();
  }
}

export class SubmitTaskChainCall_tasksStruct extends ethereum.Tuple {
  get conditions(): Array<SubmitTaskChainCall_tasksConditionsStruct> {
    return this[0].toTupleArray<SubmitTaskChainCall_tasksConditionsStruct>();
  }

  get actions(): Array<SubmitTaskChainCall_tasksActionsStruct> {
    return this[1].toTupleArray<SubmitTaskChainCall_tasksActionsStruct>();
  }

  get selfProviderGasLimit(): BigInt {
    return this[2].toBigInt();
  }

  get selfProviderGasPriceCeil(): BigInt {
    return this[3].toBigInt();
  }
}

export class SubmitTaskChainCall_tasksConditionsStruct extends ethereum.Tuple {
  get inst(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class SubmitTaskChainCall_tasksActionsStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get operation(): i32 {
    return this[2].toI32();
  }

  get dataFlow(): i32 {
    return this[3].toI32();
  }

  get value(): BigInt {
    return this[4].toBigInt();
  }

  get termsOkCheck(): boolean {
    return this[5].toBoolean();
  }
}

export class SubmitTaskCycleCall extends ethereum.Call {
  get inputs(): SubmitTaskCycleCall__Inputs {
    return new SubmitTaskCycleCall__Inputs(this);
  }

  get outputs(): SubmitTaskCycleCall__Outputs {
    return new SubmitTaskCycleCall__Outputs(this);
  }
}

export class SubmitTaskCycleCall__Inputs {
  _call: SubmitTaskCycleCall;

  constructor(call: SubmitTaskCycleCall) {
    this._call = call;
  }

  get _provider(): SubmitTaskCycleCall_providerStruct {
    return this._call.inputValues[0].value.toTuple() as SubmitTaskCycleCall_providerStruct;
  }

  get _tasks(): Array<SubmitTaskCycleCall_tasksStruct> {
    return this._call.inputValues[1].value.toTupleArray<
      SubmitTaskCycleCall_tasksStruct
    >();
  }

  get _expiryDate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _cycles(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class SubmitTaskCycleCall__Outputs {
  _call: SubmitTaskCycleCall;

  constructor(call: SubmitTaskCycleCall) {
    this._call = call;
  }
}

export class SubmitTaskCycleCall_providerStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get module(): Address {
    return this[1].toAddress();
  }
}

export class SubmitTaskCycleCall_tasksStruct extends ethereum.Tuple {
  get conditions(): Array<SubmitTaskCycleCall_tasksConditionsStruct> {
    return this[0].toTupleArray<SubmitTaskCycleCall_tasksConditionsStruct>();
  }

  get actions(): Array<SubmitTaskCycleCall_tasksActionsStruct> {
    return this[1].toTupleArray<SubmitTaskCycleCall_tasksActionsStruct>();
  }

  get selfProviderGasLimit(): BigInt {
    return this[2].toBigInt();
  }

  get selfProviderGasPriceCeil(): BigInt {
    return this[3].toBigInt();
  }
}

export class SubmitTaskCycleCall_tasksConditionsStruct extends ethereum.Tuple {
  get inst(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class SubmitTaskCycleCall_tasksActionsStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get operation(): i32 {
    return this[2].toI32();
  }

  get dataFlow(): i32 {
    return this[3].toI32();
  }

  get value(): BigInt {
    return this[4].toBigInt();
  }

  get termsOkCheck(): boolean {
    return this[5].toBoolean();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnprovideFundsCall extends ethereum.Call {
  get inputs(): UnprovideFundsCall__Inputs {
    return new UnprovideFundsCall__Inputs(this);
  }

  get outputs(): UnprovideFundsCall__Outputs {
    return new UnprovideFundsCall__Outputs(this);
  }
}

export class UnprovideFundsCall__Inputs {
  _call: UnprovideFundsCall;

  constructor(call: UnprovideFundsCall) {
    this._call = call;
  }

  get _withdrawAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UnprovideFundsCall__Outputs {
  _call: UnprovideFundsCall;

  constructor(call: UnprovideFundsCall) {
    this._call = call;
  }

  get realWithdrawAmount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class UnprovideTaskSpecsCall extends ethereum.Call {
  get inputs(): UnprovideTaskSpecsCall__Inputs {
    return new UnprovideTaskSpecsCall__Inputs(this);
  }

  get outputs(): UnprovideTaskSpecsCall__Outputs {
    return new UnprovideTaskSpecsCall__Outputs(this);
  }
}

export class UnprovideTaskSpecsCall__Inputs {
  _call: UnprovideTaskSpecsCall;

  constructor(call: UnprovideTaskSpecsCall) {
    this._call = call;
  }

  get _taskSpecs(): Array<UnprovideTaskSpecsCall_taskSpecsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      UnprovideTaskSpecsCall_taskSpecsStruct
    >();
  }
}

export class UnprovideTaskSpecsCall__Outputs {
  _call: UnprovideTaskSpecsCall;

  constructor(call: UnprovideTaskSpecsCall) {
    this._call = call;
  }
}

export class UnprovideTaskSpecsCall_taskSpecsStruct extends ethereum.Tuple {
  get conditions(): Array<Address> {
    return this[0].toAddressArray();
  }

  get actions(): Array<UnprovideTaskSpecsCall_taskSpecsActionsStruct> {
    return this[1].toTupleArray<
      UnprovideTaskSpecsCall_taskSpecsActionsStruct
    >();
  }

  get gasPriceCeil(): BigInt {
    return this[2].toBigInt();
  }
}

export class UnprovideTaskSpecsCall_taskSpecsActionsStruct extends ethereum.Tuple {
  get addr(): Address {
    return this[0].toAddress();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }

  get operation(): i32 {
    return this[2].toI32();
  }

  get dataFlow(): i32 {
    return this[3].toI32();
  }

  get value(): BigInt {
    return this[4].toBigInt();
  }

  get termsOkCheck(): boolean {
    return this[5].toBoolean();
  }
}

export class UnstakeExecutorCall extends ethereum.Call {
  get inputs(): UnstakeExecutorCall__Inputs {
    return new UnstakeExecutorCall__Inputs(this);
  }

  get outputs(): UnstakeExecutorCall__Outputs {
    return new UnstakeExecutorCall__Outputs(this);
  }
}

export class UnstakeExecutorCall__Inputs {
  _call: UnstakeExecutorCall;

  constructor(call: UnstakeExecutorCall) {
    this._call = call;
  }
}

export class UnstakeExecutorCall__Outputs {
  _call: UnstakeExecutorCall;

  constructor(call: UnstakeExecutorCall) {
    this._call = call;
  }
}

export class WithdrawExcessExecutorStakeCall extends ethereum.Call {
  get inputs(): WithdrawExcessExecutorStakeCall__Inputs {
    return new WithdrawExcessExecutorStakeCall__Inputs(this);
  }

  get outputs(): WithdrawExcessExecutorStakeCall__Outputs {
    return new WithdrawExcessExecutorStakeCall__Outputs(this);
  }
}

export class WithdrawExcessExecutorStakeCall__Inputs {
  _call: WithdrawExcessExecutorStakeCall;

  constructor(call: WithdrawExcessExecutorStakeCall) {
    this._call = call;
  }

  get _withdrawAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawExcessExecutorStakeCall__Outputs {
  _call: WithdrawExcessExecutorStakeCall;

  constructor(call: WithdrawExcessExecutorStakeCall) {
    this._call = call;
  }

  get realWithdrawAmount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class WithdrawSysAdminFundsCall extends ethereum.Call {
  get inputs(): WithdrawSysAdminFundsCall__Inputs {
    return new WithdrawSysAdminFundsCall__Inputs(this);
  }

  get outputs(): WithdrawSysAdminFundsCall__Outputs {
    return new WithdrawSysAdminFundsCall__Outputs(this);
  }
}

export class WithdrawSysAdminFundsCall__Inputs {
  _call: WithdrawSysAdminFundsCall;

  constructor(call: WithdrawSysAdminFundsCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawSysAdminFundsCall__Outputs {
  _call: WithdrawSysAdminFundsCall;

  constructor(call: WithdrawSysAdminFundsCall) {
    this._call = call;
  }

  get realWithdrawAmount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}
